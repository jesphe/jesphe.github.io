{"version":3,"sources":["components/Product.js","components/ShoppingCart.js","components/ConfirmOrder.js","components/OrderSummary.js","App.js","reportWebVitals.js","index.js"],"names":["ProductDescription","product","shoppingCart","setShoppingCart","description","onClick","concat","Product","useState","showDescription","setShowDescription","className","src","image","alt","price","ShoppingCart","contents","setConfirmOrder","productsInCart","Set","length","map","filter","c","id","reduce","a","b","ConfirmOrder","setOrderInformation","firstName","lastName","email","phone","address","city","postalCode","information","setInformation","handleChange","e","value","target","name","onSubmit","preventDefault","type","onChange","required","OrderSummary","orderInformation","finishedOrder","products","cart","App","confirmOrder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d16f39a.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst Product = ({ product, shoppingCart, setShoppingCart }) => {\r\n   const [showDescription, setShowDescription] = useState(false);\r\n\r\n   return (\r\n      <div className=\"product-container\">\r\n         <div className=\"product-image-container\">\r\n            <img src={product.image} alt={product.product} />\r\n         </div>\r\n         <div className=\"product-headings\">\r\n            <h3>{product.product}</h3>\r\n            <h4>{product.price}€/kpl</h4>\r\n         </div>\r\n         <div className=\"product-details\">\r\n            <span onClick={() => setShowDescription(!showDescription)}>\r\n               Lisätiedot\r\n            </span>\r\n            <div className=\"product-description\">\r\n               {showDescription ? (\r\n                  <ProductDescription\r\n                     product={product}\r\n                     shoppingCart={shoppingCart}\r\n                     setShoppingCart={setShoppingCart}\r\n                  />\r\n               ) : null}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nconst ProductDescription = ({ product, shoppingCart, setShoppingCart }) => (\r\n   <>\r\n      {product.description}\r\n      <button onClick={() => setShoppingCart(shoppingCart.concat(product))}>\r\n         +\r\n      </button>\r\n   </>\r\n);\r\n\r\nexport default Product;\r\n","const ShoppingCart = ({ contents, setShoppingCart, setConfirmOrder }) => {\r\n   const productsInCart = [...new Set(contents)];\r\n\r\n   return (\r\n      <div className=\"shopping-cart\">\r\n         <header className=\"section-headers\">\r\n            <h2>Ostoskori</h2>\r\n         </header>\r\n         <div className=\"shopping-cart-container\">\r\n            {contents.length === 0 ? (\r\n               <div className=\"no-products\">\r\n                  <h3>Ostoskorisi on tyhjä</h3>\r\n               </div>\r\n            ) : (\r\n               <>\r\n                  <div className=\"all-products\">\r\n                     {productsInCart.map((product) => (\r\n                        <div key={product.id} className=\"shopping-cart-product\">\r\n                           <div className=\"shopping-cart-product-image-container\">\r\n                              <img src={product.image} alt={product.product} />\r\n                           </div>\r\n                           <div className=\"shopping-cart-text\">\r\n                              <h3>{product.product}</h3>\r\n                              <div className=\"shopping-cart-price\">\r\n                                 <p>\r\n                                    {' '}\r\n                                    Kappalemäärä:{' '}\r\n                                    {\r\n                                       contents.filter(\r\n                                          (c) => c.product === product.product\r\n                                       ).length\r\n                                    }\r\n                                 </p>\r\n                              </div>\r\n                           </div>\r\n                        </div>\r\n                     ))}\r\n                  </div>\r\n                  <div className=\"shopping-cart-bottom\">\r\n                     <div className=\"shopping-cart-bottom-total-empty\">\r\n                        <p className=\"total\">\r\n                           Kokonaishinta:{' '}\r\n                           {contents\r\n                              .map((c) => c.price)\r\n                              .reduce((a, b) => a + b)}\r\n                           €\r\n                        </p>\r\n                        <button\r\n                           className=\"empty-cart\"\r\n                           onClick={() => setShoppingCart([])}\r\n                        >\r\n                           Tyhjennä ostoskori\r\n                        </button>\r\n                     </div>\r\n                     <div className=\"confirm-order-container\">\r\n                        <button onClick={() => setConfirmOrder(true)}>Vahvista tilaus</button>\r\n                     </div>\r\n                  </div>\r\n               </>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ShoppingCart;\r\n","import { useState } from 'react';\r\n\r\nconst ConfirmOrder = ({ setOrderInformation }) => {\r\n   const [information, setInformation] = useState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      address: '',\r\n      city: '',\r\n      postalCode: '',\r\n   });\r\n\r\n   const handleChange = (e) => {\r\n      const value = e.target.value;\r\n      setInformation({\r\n         ...information,\r\n         [e.target.name]: value,\r\n      });\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setOrderInformation(information);\r\n   };\r\n\r\n   return (\r\n      <div className=\"confirm-order\">\r\n         <header className=\"section-headers\">\r\n            <h2>Vahvista Tilaus</h2>\r\n         </header>\r\n         <form onSubmit={handleSubmit}>\r\n            <p>\r\n               <span className=\"horizontal-line-text\">\r\n                  Henkilökohtaiset tiedot\r\n               </span>\r\n            </p>\r\n            <hr />\r\n            <div className=\"personal-information\">\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <label>Etunimi</label>\r\n                     <input\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        value={information.firstName}\r\n                        onChange={handleChange}\r\n                        required\r\n                     />\r\n                  </div>\r\n                  <div>\r\n                     <label>Sukunimi</label>\r\n                     <input\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        value={information.lastName}\r\n                        onChange={handleChange}\r\n                        required\r\n                     />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <label>Sähköposti</label>\r\n                     <input\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={information.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                     />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row\">\r\n                  <div>\r\n                     <label>Puhelinnumero</label>\r\n                     <input\r\n                        name=\"phone\"\r\n                        type=\"tel\"\r\n                        value={information.phone}\r\n                        onChange={handleChange}\r\n                        required\r\n                     />\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <p>\r\n               <span className=\"horizontal-line-text\">Toimitusosoite</span>\r\n            </p>\r\n            <hr />\r\n            <div className=\"row\">\r\n               <div>\r\n                  <label>Katuosoite</label>\r\n                  <input\r\n                     name=\"address\"\r\n                     type=\"text\"\r\n                     value={information.address}\r\n                     onChange={handleChange}\r\n                     required\r\n                  />\r\n               </div>\r\n            </div>\r\n            <div className=\"row\">\r\n               <div>\r\n                  <label>Postitoimipaikka</label>\r\n                  <input\r\n                     name=\"city\"\r\n                     type=\"text\"\r\n                     value={information.city}\r\n                     onChange={handleChange}\r\n                     required\r\n                  />\r\n               </div>\r\n               <div>\r\n                  <label>Postinumero</label>\r\n                  <input\r\n                     name=\"postalCode\"\r\n                     type=\"text\"\r\n                     value={information.postalCode}\r\n                     onChange={handleChange}\r\n                     required\r\n                  />\r\n               </div>\r\n            </div>\r\n            <div className=\"row\">\r\n               <div>\r\n                  <input type=\"submit\" />\r\n               </div>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ConfirmOrder;\r\n","const OrderSummary = ({\r\n   shoppingCart,\r\n   orderInformation\r\n}) => {\r\n   const finishedOrder = [shoppingCart, orderInformation];\r\n   const products = [...new Set(finishedOrder[0])];\r\n   const cart = finishedOrder[0];\r\n\r\n   return (\r\n      <div className=\"order-summary\">\r\n         <header className=\"section-headers\">\r\n            <h2>Tilauksen tiedot</h2>\r\n         </header>\r\n         <div className=\"order-summary-container\">\r\n            <h3>Tilatut tuotteet:</h3>\r\n            {products.map((product) => (\r\n               <div key={product.id}>\r\n                  <p>\r\n                     {product.product} x{' '}\r\n                     {cart.filter((c) => c.product === product.product).length}\r\n                  </p>\r\n               </div>\r\n            ))}\r\n            <p>\r\n               Lopullinen hinta:{' '}\r\n               {cart.map((c) => c.price).reduce((a, b) => a + b)}€\r\n            </p>\r\n            <p>{`Toimitusosoite: ${orderInformation.address} ${orderInformation.city} ${orderInformation.postalCode}`}</p>\r\n            <h4>Kiitos tilauksestanne!</h4>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import './App.css';\nimport { useState } from 'react';\nimport { products } from './products.json';\nimport Product from './components/Product';\nimport ShoppingCart from './components/ShoppingCart';\nimport ConfirmOrder from './components/ConfirmOrder';\nimport OrderSummary from './components/OrderSummary';\n\nfunction App() {\n   const [shoppingCart, setShoppingCart] = useState([]);\n   const [confirmOrder, setConfirmOrder] = useState(false);\n   const [orderInformation, setOrderInformation] = useState(null);\n\n   return (\n      <div className=\"app\">\n         <header className=\"app-header\">\n            <h2>Fanikauppa</h2>\n         </header>\n         <main>\n            {orderInformation !== null ? (\n               <OrderSummary\n                  shoppingCart={shoppingCart}\n                  orderInformation={orderInformation}\n                  setShoppingCart={setShoppingCart}\n                  setOrderInformation={setOrderInformation}\n               />\n            ) : (\n               <>\n                  <div className=\"products\">\n                     {products.map((product) => (\n                        <Product\n                           key={product.id}\n                           product={product}\n                           shoppingCart={shoppingCart}\n                           setShoppingCart={setShoppingCart}\n                        />\n                     ))}\n                  </div>\n                  <ShoppingCart\n                     contents={shoppingCart}\n                     setShoppingCart={setShoppingCart}\n                     setConfirmOrder={setConfirmOrder}\n                  />\n                  {orderInformation !== null ? (\n                     <OrderSummary\n                        shoppingCart={shoppingCart}\n                        orderInformation={orderInformation}\n                        setShoppingCart={setShoppingCart}\n                        setOrderInformation={setOrderInformation}\n                     />\n                  ) : confirmOrder ? (\n                     <ConfirmOrder setOrderInformation={setOrderInformation} />\n                  ) : null}\n               </>\n            )}\n         </main>\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}